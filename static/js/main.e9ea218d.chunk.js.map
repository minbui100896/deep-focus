{"version":3,"sources":["logo.svg","component/helpers.js","sound/alarm-clock-5s.mp3","sound/clock-ticking.mp3","css/ConditionStyle.js","component/MainControll.js","component/seo.js","webpack:///./src/logo.svg?515f","App.js","reportWebVitals.js","index.js"],"names":["_25","_05","_15","handleOnKeyDown","e","key","preventDefault","this","handleOnSpaceDown","state","interval","handleStopTimer","handleStartTimer","colorStyle","MainControll","props","step","phase","timeRemaining","getTimeRemaining","isRunning","mode","finishPhase","continousFocusAmount","bind","startTimer","displayTime","updateBrowserTab","label","title","minutes","seconds","color","attributes","metaDescription","iconColor","console","log","data","document","querySelector","setAttribute","favicon","getElementById","href","seo","playSound","ClockTicking","setState","clearInterval","setInterval","total","alarmFinishPhase","gotoNextPhase","timeInMilliSecs","Math","floor","AlarmClock","handleOpenFocusMode","handleOpenShortBreakMode","handleOpenLongBreakMode","src","Howl","play","className","style","Row","Col","sm","Card","CardBody","getModeButtonStyle","onClick","handleChangeMode","getControlButtonStyle","target","window","onKeyDown","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e9ea218d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// MINUTES to MILLISECONDS\nexport const _25 = 1500000;\nexport const _05 = 300000;\nexport const _15 = 900000;\n// export const _05 = 10000;\n// export const _15 = 10000;\n// export const _25 = 10000;\n\nexport const _test = 15000;\n\nexport function handleOnKeyDown(e) {\n  if (e.key === ' ') {\n    e.preventDefault();\n    // method on Timer class in index.js\n    this.handleOnSpaceDown();\n  }\n}\n\nexport function handleOnSpaceDown() {\n  // is timer running?\n  if (this.state.interval) {\n    this.handleStopTimer();\n  } else {\n    this.handleStartTimer();\n  }\n}\n\nexport function handleMenuTransform() {\n  let menu = document.querySelector('.menu'),\n    burger = document.querySelector('.menu-burger'),\n    items = document.querySelector('.menu-items'),\n    transforms = [ menu, burger, items ];\n\n  transforms.forEach(el => el.classList.toggle('transform'));\n}\n\nexport function onGranted() {\n  alert('Granted!');\n}\n\nexport function onDenied() {\n  alert('Denied!');\n}\n","export default __webpack_public_path__ + \"static/media/alarm-clock-5s.ba2165d8.mp3\";","export default __webpack_public_path__ + \"static/media/clock-ticking.32e29456.mp3\";","export const colorStyle = {\r\n    \"focus\": {\r\n        \"background\": {\r\n            'background-color': '#DB524D'\r\n        },\r\n        \"main-card\": {\r\n            'background-color':'#DF645F'\r\n        },\r\n        \"mode-button\": {\r\n            'background-color': '#BE5551',\r\n            'font-weight': '700'\r\n        },\r\n        \"control-button\": {\r\n            'color': '#DB524D'\r\n        }\r\n    },\r\n    \"shortBreak\": {\r\n        \"background\": {\r\n            'background-color': '#468E91'\r\n        },\r\n        \"main-card\": {\r\n            'background-color':'#599A9C'\r\n        },\r\n        \"mode-button\": {\r\n            'background-color': '#4C8385',\r\n            'font-weight': '700'\r\n        },\r\n        \"control-button\": {\r\n            'color': '#468E91'\r\n        }\r\n    },\r\n    \"longBreak\": {\r\n        \"background\": {\r\n            'background-color': '#568BB1'\r\n        },\r\n        \"main-card\": {\r\n            'background-color':'#437EA8'\r\n        },\r\n        \"mode-button\": {\r\n            'background-color': '#497697',\r\n            'font-weight': '700'\r\n        },\r\n        \"control-button\": {\r\n            'color': '#568BB1'\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './../css/styles.css';\r\nimport { _25, _05, _15, handleOnKeyDown, handleOnSpaceDown } from './helpers';\r\nimport EventListener from 'react-event-listener';\r\nimport { Card, CardBody, Col, Row } from 'reactstrap';\r\nimport AlarmClock from '../sound/alarm-clock-5s.mp3';\r\nimport ClockTicking from '../sound/clock-ticking.mp3'\r\nimport { Howl, Howler } from 'howler';\r\nimport { colorStyle } from './../css/ConditionStyle';\r\nimport LocalStorageUtils from './localStorageUtils';\r\nimport { seo } from './seo';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nclass MainControll extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            interval: null,\r\n            step: 0,\r\n            phase: '',\r\n            timeRemaining: this.getTimeRemaining(_25),\r\n            isRunning: false,\r\n            mode: 'focus',\r\n            finishPhase: false,\r\n            continousFocusAmount: 0\r\n        };\r\n\r\n        this.handleStartTimer = this.handleStartTimer.bind(this);\r\n        this.handleStopTimer = this.handleStopTimer.bind(this);\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.displayTime = this.displayTime.bind(this);\r\n        this.getTimeRemaining = this.getTimeRemaining.bind(this);\r\n        this.handleOnKeyDown = handleOnKeyDown.bind(this);\r\n        this.handleOnSpaceDown = handleOnSpaceDown.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.updateBrowserTab()\r\n    }\r\n\r\n    updateBrowserTab() {\r\n        let label = this.state.mode == 'focus' ? \"Working time!\" : \"Breaking time!\"\r\n        let title = `${this.state.timeRemaining.minutes}:${this.state.timeRemaining.seconds} - ${label}`\r\n        let color = 'black'\r\n        if (this.state.isRunning) {\r\n            if (this.state.mode == 'focus') {\r\n                color = 'red'\r\n            } else {\r\n                color = 'green'\r\n            }\r\n        }\r\n        let attributes = {\r\n            title: title,\r\n            metaDescription: 'With some meta description',\r\n            iconColor: color\r\n        }\r\n        console.log(attributes)\r\n        seo(attributes)\r\n    }\r\n\r\n    handleStartTimer() {\r\n        this.playSound(ClockTicking)\r\n        if (!this.state.interval) {\r\n            // Update the class of the timer to add styles depending on which step it is on\r\n            this.setState({ phase: this.state.step % 2 === 0 ? 'active' : 'rest' });\r\n            this.startTimer();\r\n            this.updateBrowserTab()\r\n        }\r\n    }\r\n\r\n    handleStopTimer() {\r\n        if (this.state.interval) {\r\n            console.log('stopping...');\r\n\r\n            clearInterval(this.state.interval);\r\n            this.setState({\r\n                interval: null,\r\n                phase: '',\r\n                isRunning: false\r\n            }, () => {\r\n                this.updateBrowserTab()\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    startTimer() {\r\n        this.displayTime();\r\n        // display initial time without delay\r\n        this.setState({\r\n            // run every second\r\n            interval: setInterval(this.displayTime, 1000),\r\n            isRunning: true,\r\n            finishPhase: false,\r\n        });\r\n    }\r\n\r\n    displayTime() {\r\n        console.log(this.state.timeRemaining.total)\r\n        if (this.state.timeRemaining.total > 0) {\r\n            // get & set time remaining every 1 second\r\n            let timeRemaining = this.getTimeRemaining(\r\n                this.state.timeRemaining.total - 1000\r\n            );\r\n            this.setState({ timeRemaining });\r\n            this.updateBrowserTab()\r\n        } else {\r\n            let isEndSecOfAPhase = !this.state.finishPhase\r\n            if (isEndSecOfAPhase) {\r\n                this.alarmFinishPhase()\r\n                clearInterval(this.state.interval);\r\n                this.setState({\r\n                    finishPhase: true,\r\n                    isRunning: false,\r\n                    interval: null\r\n                })\r\n                // this.resetTimeRemaining()\r\n                if (this.state.mode == 'focus') {\r\n                    this.state.continousFocusAmount = this.state.continousFocusAmount + 1\r\n                }\r\n                this.gotoNextPhase()\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    resetTimeRemaining() {\r\n        if (this.state.mode == 'focus') {\r\n            this.setState({\r\n                timeRemaining: this.getTimeRemaining(_25),\r\n            })\r\n        } else if (this.state.mode == 'shortBreak') {\r\n            this.setState({\r\n                timeRemaining: this.getTimeRemaining(_05),\r\n            })\r\n        } else {\r\n            this.setState({\r\n                timeRemaining: this.getTimeRemaining(_15),\r\n            })\r\n        }\r\n    }\r\n\r\n    gotoNextPhase() {\r\n        if (this.state.mode == 'focus') {\r\n            if (this.state.continousFocusAmount >= 3) {\r\n                this.setState({\r\n                    mode: 'longBreak',\r\n                    timeRemaining: this.getTimeRemaining(_15),\r\n                    continousFocusAmount: 0\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    mode: 'shortBreak',\r\n                    timeRemaining: this.getTimeRemaining(_05)\r\n                })\r\n            }\r\n\r\n        } else if (this.state.mode == 'shortBreak') {\r\n            this.setState({\r\n                mode: 'focus',\r\n                timeRemaining: this.getTimeRemaining(_25),\r\n            })\r\n        } else {\r\n            this.setState({\r\n                mode: 'focus',\r\n                timeRemaining: this.getTimeRemaining(_25),\r\n            })\r\n        }\r\n        this.updateBrowserTab()\r\n    }\r\n\r\n    getTimeRemaining(timeInMilliSecs) {\r\n        // return a string value of the time remaining\r\n        const total = timeInMilliSecs,\r\n            minutes = Math.floor(total / 1000 / 60 % 60),\r\n            seconds = Math.floor(total / 1000 % 60) < 10\r\n                ? '0' + Math.floor(total / 1000 % 60)\r\n                : Math.floor(total / 1000 % 60);\r\n\r\n        return { total, minutes, seconds };\r\n    }\r\n\r\n    alarmFinishPhase() {\r\n        this.playSound(AlarmClock)\r\n    }\r\n\r\n    getModeButtonStyle(mode) {\r\n        if (mode == this.state.mode) {\r\n            return colorStyle[`${this.state.mode}`]['mode-button']\r\n        } else {\r\n            return {}\r\n        }\r\n\r\n    }\r\n\r\n    getControlButtonStyle() {\r\n        return colorStyle[`${this.state.mode}`]['control-button']\r\n    }\r\n\r\n    handleChangeMode(e, mode) {\r\n        e.preventDefault()\r\n        this.setState({\r\n            finishPhase: false\r\n        })\r\n        this.handleStopTimer();\r\n        if (mode == 'focus') {\r\n            this.handleOpenFocusMode()\r\n        } else if (mode == 'shortBreak') {\r\n            this.handleOpenShortBreakMode()\r\n        } else {\r\n            this.handleOpenLongBreakMode()\r\n        }\r\n        this.updateBrowserTab()\r\n    }\r\n\r\n    handleOpenFocusMode() {\r\n        this.setState({\r\n            mode: 'focus',\r\n            timeRemaining: this.getTimeRemaining(_25)\r\n        })\r\n    }\r\n\r\n    handleOpenShortBreakMode() {\r\n        this.setState({\r\n            mode: 'shortBreak',\r\n            timeRemaining: this.getTimeRemaining(_05)\r\n        })\r\n    }\r\n\r\n    handleOpenLongBreakMode() {\r\n        this.setState({\r\n            mode: 'longBreak',\r\n            timeRemaining: this.getTimeRemaining(_15)\r\n        })\r\n    }\r\n\r\n    playSound(src) {\r\n        var sound = new Howl({ src });\r\n        sound.play();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='active' style={colorStyle[`${this.state.mode}`]['background']}>\r\n                <Row className=\"row-header\">\r\n                    <Col sm={4} ></Col>\r\n                    <Col sm={4}>\r\n                        <div className=\"header\">\r\n                            <button className=\"header-title\"><i className=\"fa fa-check-circle-o\" ></i> Deep Focus</button>\r\n                        </div>\r\n                    </Col>\r\n                    <Col sm={4}></Col>\r\n                </Row>\r\n                {/* <Row className=\"hr-row\">\r\n                    <Col sm={4} className=\"hr-col\"></Col>\r\n                    <Col sm={4} className=\"hr-col\">\r\n                        <hr className=\"header-hr\"></hr>\r\n                    </Col>\r\n                    <Col sm={4} className=\"hr-col\"></Col>\r\n                </Row> */}\r\n                <div><hr className=\"header-hr\"></hr></div>\r\n\r\n                <Card className=\"main-card\" style={colorStyle[`${this.state.mode}`]['main-card']}>\r\n                    <CardBody>\r\n                        <div className='mode'>\r\n                            <button className='mode-button' style={this.getModeButtonStyle('focus')} onClick={e => this.handleChangeMode(e, 'focus')}>Focus</button>\r\n                            <button className='mode-button' style={this.getModeButtonStyle('shortBreak')} onClick={e => this.handleChangeMode(e, 'shortBreak')}>Short Break</button>\r\n                            <button className='mode-button' style={this.getModeButtonStyle('longBreak')} onClick={e => this.handleChangeMode(e, 'longBreak')}>Long Break</button>\r\n                        </div>\r\n                        <div className=\"timer\">\r\n                            <span className=\"time\">{`${this.state.timeRemaining.minutes}:${this.state.timeRemaining.seconds}`}</span>\r\n                            <div>\r\n                                {this.state.isRunning ?\r\n                                    <button style={this.getControlButtonStyle()} className='control-button' onClick={this.handleStopTimer}>stop</button> :\r\n                                    <button style={this.getControlButtonStyle()} className='control-button' onClick={this.handleStartTimer}>start</button>}\r\n                            </div>\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n                <div className='status-label'>\r\n                    <span>{this.state.mode == 'focus' ? 'Time to work!' : 'Time for a break!'}</span>\r\n                </div>\r\n                <EventListener target={window} onKeyDown={this.handleOnKeyDown} />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default MainControll\r\n","export function seo(data = {}) {\r\n    data.title = data.title || 'Default title';\r\n    data.metaDescription = data.metaDescription || 'Default description';\r\n  \r\n    document.title = data.title;\r\n    document.querySelector('meta[name=\"description\"]').setAttribute('content', data.metaDescription);\r\n\r\n    let favicon = document.getElementById('favicon')\r\n    if(data.iconColor == 'red') {\r\n        favicon.href = './red-tick-box.png'\r\n    } else if(data.iconColor == 'green'){\r\n        favicon.href = './green-tick-box.png'       \r\n    } else {\r\n        favicon.href = './black-tick-box.png'  \r\n    }\r\n  }","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#61DAFB\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 420.9,\n    cy: 296.5,\n    r: 45.7\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.5 78.1z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";\nexport { ForwardRef as ReactComponent };","import logo from './logo.svg';\nimport './App.css';\nimport MainControll from './component/MainControll';\nimport { ReactComponent as Logo } from './logo.svg';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <div className=\"App-header\"> */}\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n      \n      {/* </div> */}\n      <MainControll></MainControll>\n      {/* <Logo >ABC</Logo> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}